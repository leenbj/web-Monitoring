# 网址监控系统 - 宝塔面板Nginx配置
# 前后端分离部署，前端静态文件 + 后端API代理

server {
    listen 80;
    server_name your-domain.com;  # 修改为实际域名
    
    # 字符集
    charset utf-8;
    
    # 日志文件
    access_log /www/wwwroot/website-monitor/logs/nginx_access.log;
    error_log /www/wwwroot/website-monitor/logs/nginx_error.log;
    
    # 安全头部
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self'" always;
    
    # 网站根目录 - 前端静态文件
    root /www/wwwroot/website-monitor/frontend/dist;
    index index.html;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
    
    # 静态资源缓存
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Last-Modified "";
        add_header ETag "";
        
        # 安全头部
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # API接口代理到后端Docker容器
    location /api/ {
        # 代理到Docker容器
        proxy_pass http://127.0.0.1:5011;
        
        # 基础代理配置
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 缓存控制
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
        
        # 文件上传大小限制
        client_max_body_size 16M;
    }
    
    # 前端路由 - Vue Router History模式
    location / {
        try_files $uri $uri/ /index.html;
        
        # 防止缓存index.html
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }
    
    # 文件下载接口特殊处理
    location /api/files/download/ {
        proxy_pass http://127.0.0.1:5011;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 下载文件的特殊配置
        proxy_buffering off;
        proxy_request_buffering off;
        client_max_body_size 100M;
        proxy_read_timeout 300s;
    }
    
    # 错误页面
    location = /50x.html {
        root /www/wwwroot/website-monitor/frontend/dist;
    }
    
    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问备份文件
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 健康检查端点
    location = /health {
        proxy_pass http://127.0.0.1:5011/api/health;
        proxy_set_header Host $host;
        access_log off;
    }
}

# HTTPS配置 (SSL证书配置后启用)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     # SSL证书配置
#     ssl_certificate /www/server/panel/vhost/cert/your-domain.com/fullchain.pem;
#     ssl_certificate_key /www/server/panel/vhost/cert/your-domain.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # 其他配置与HTTP相同...
# }

# HTTP重定向到HTTPS (配置SSL后启用)
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }