# 网址监控系统 - 前后端完整部署配置
# 包含前端、后端、数据库、缓存等完整服务

services:
  # 前端服务
  frontend:
    image: leenbj68719929/website-monitor-frontend:fullstack
    container_name: website-monitor-frontend
    restart: unless-stopped
    
    ports:
      - "80:80"  # 前端Web服务
    
    depends_on:
      - backend
    
    networks:
      - frontend_network
      - backend_network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # 后端API服务
  backend:
    image: leenbj68719929/website-monitor-backend:fixed
    container_name: website-monitor-backend
    restart: unless-stopped
    
    environment:
      - DATABASE_URL=mysql://monitor_user:Monitor123%21%40%23@mysql:3306/website_monitor
      - REDIS_URL=redis://:Redis123%21%40%23@redis:6379/0
      - SECRET_KEY=website-monitor-secret-key-12345678901234567890abcdef
      - JWT_SECRET_KEY=website-monitor-jwt-secret-12345678901234567890abcdef
      - FLASK_ENV=production
      - TZ=Asia/Shanghai
      - PYTHONUNBUFFERED=1
    
    ports:
      - "5013:5000"  # 后端API服务
    
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    networks:
      - backend_network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: website-monitor-mysql
    restart: unless-stopped
    
    environment:
      - MYSQL_ROOT_PASSWORD=RootMonitor123!@#
      - MYSQL_DATABASE=website_monitor
      - MYSQL_USER=monitor_user
      - MYSQL_PASSWORD=Monitor123!@#
      - TZ=Asia/Shanghai
    
    ports:
      - "3306:3306"
    
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf:/etc/mysql/conf.d
    
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=200
      --innodb_buffer_pool_size=256M
    
    networks:
      - backend_network
    
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-umonitor_user", "-pMonitor123!@#"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: website-monitor-redis
    restart: unless-stopped
    
    command: >
      redis-server 
      --requirepass Redis123!@#
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    
    ports:
      - "6379:6379"
    
    volumes:
      - redis_data:/data
    
    networks:
      - backend_network
    
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "Redis123!@#", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # 可选：PhpMyAdmin数据库管理工具
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: website-monitor-phpmyadmin
    restart: unless-stopped
    
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=monitor_user
      - PMA_PASSWORD=Monitor123!@#
      - MYSQL_ROOT_PASSWORD=RootMonitor123!@#
      - UPLOAD_LIMIT=100M
    
    ports:
      - "8080:80"
    
    depends_on:
      mysql:
        condition: service_healthy
    
    networks:
      - backend_network
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

# 数据卷配置
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# 网络配置
networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge
    internal: false  # 允许外部访问，但只通过指定端口