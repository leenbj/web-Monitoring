# 网址监控系统 - 服务器部署配置
# 使用Docker Hub镜像: leenbj68719929/website-monitor-backend

services:
  # 后端服务
  backend:
    image: leenbj68719929/website-monitor-backend:latest
    container_name: website-monitor-backend
    restart: unless-stopped
    
    environment:
      # 数据库配置
      - DATABASE_URL=mysql://monitor_user:Monitor123!@#@mysql:3306/website_monitor
      - REDIS_URL=redis://:Redis123!@#@redis:6379/0
      
      # 应用安全配置
      - SECRET_KEY=4f8a2c9d7e1b6a3f8c2e9d4b7a1f6c3e
      - JWT_SECRET_KEY=9b2e5f8a1c4d7e0b3f6a9c2e5f8b1d4a
      
      # 邮件配置 (请修改为实际邮箱)
      - MAIL_SERVER=smtp.qq.com
      - MAIL_PORT=587
      - MAIL_USE_TLS=true
      - MAIL_USERNAME=your_email@qq.com
      - MAIL_PASSWORD=your_qq_app_password
      
      # 运行环境配置
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
      - TZ=Asia/Shanghai
      - PYTHONUNBUFFERED=1
    
    ports:
      - "5000:5000"
    
    volumes:
      # 数据持久化
      - ./data/backend:/app/database
      - ./logs/backend:/app/backend/logs
      - ./uploads:/app/backend/uploads
      - ./downloads:/app/backend/downloads
      - ./user_files:/app/backend/user_files
    
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    networks:
      - monitor_network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
  
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: website-monitor-mysql
    restart: unless-stopped
    
    environment:
      - MYSQL_ROOT_PASSWORD=RootPassword123!@#
      - MYSQL_DATABASE=website_monitor
      - MYSQL_USER=monitor_user
      - MYSQL_PASSWORD=Monitor123!@#
      - TZ=Asia/Shanghai
    
    ports:
      - "3306:3306"
    
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf:/etc/mysql/conf.d
      - ./backups:/backups
    
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=200
      --innodb_buffer_pool_size=256M
    
    networks:
      - monitor_network
    
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "monitor_user", "-pMonitor123!@#"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
  
  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: website-monitor-redis
    restart: unless-stopped
    
    command: >
      redis-server 
      --requirepass Redis123!@#
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    
    ports:
      - "6379:6379"
    
    volumes:
      - ./data/redis:/data
      - ./redis/conf:/usr/local/etc/redis
    
    networks:
      - monitor_network
    
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "Redis123!@#", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # 可选：PhpMyAdmin数据库管理工具
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: website-monitor-phpmyadmin
    restart: unless-stopped
    
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=monitor_user
      - PMA_PASSWORD=Monitor123!@#
      - MYSQL_ROOT_PASSWORD=RootPassword123!@#
      - UPLOAD_LIMIT=100M
    
    ports:
      - "8080:80"
    
    depends_on:
      mysql:
        condition: service_healthy
    
    networks:
      - monitor_network
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

# 网络配置
networks:
  monitor_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16