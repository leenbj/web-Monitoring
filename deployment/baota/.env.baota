# 网址监控系统 - 宝塔面板环境变量配置

# =============================================================================
# Docker Hub配置
# =============================================================================
DOCKERHUB_USERNAME=your_dockerhub_username

# =============================================================================
# 数据库配置
# =============================================================================

# MySQL配置
DB_NAME=website_monitor
DB_USER=monitor_user
DB_PASSWORD=Monitor123!@#
DB_ROOT_PASSWORD=RootPassword123!@#

# 数据库连接URL
DATABASE_URL=mysql://monitor_user:Monitor123!@#@mysql:3306/website_monitor

# =============================================================================
# Redis配置
# =============================================================================

REDIS_PASSWORD=Redis123!@#
REDIS_URL=redis://:Redis123!@#@redis:6379/0

# Redis管理工具账号
REDIS_ADMIN_USER=admin
REDIS_ADMIN_PASSWORD=admin123

# =============================================================================
# 应用安全配置 (重要：生产环境必须修改)
# =============================================================================

# Flask密钥 (请使用随机生成的32位字符串)
SECRET_KEY=your-32-char-secret-key-change-in-production

# JWT密钥 (请使用随机生成的32位字符串)
JWT_SECRET_KEY=your-32-char-jwt-secret-change-in-production

# =============================================================================
# 邮件服务配置
# =============================================================================

# QQ邮箱配置示例
MAIL_SERVER=smtp.qq.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=your_email@qq.com
MAIL_PASSWORD=your_qq_app_password

# 163邮箱配置示例
# MAIL_SERVER=smtp.163.com
# MAIL_PORT=587
# MAIL_USE_TLS=true
# MAIL_USERNAME=your_email@163.com
# MAIL_PASSWORD=your_163_app_password

# Gmail配置示例
# MAIL_SERVER=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USE_TLS=true
# MAIL_USERNAME=your_email@gmail.com
# MAIL_PASSWORD=your_gmail_app_password

# 企业邮箱配置示例
# MAIL_SERVER=smtp.exmail.qq.com
# MAIL_PORT=587
# MAIL_USE_TLS=true
# MAIL_USERNAME=your_email@company.com
# MAIL_PASSWORD=your_company_email_password

# =============================================================================
# 应用运行配置
# =============================================================================

# 运行环境
FLASK_ENV=production

# 日志级别 (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# 时区
TZ=Asia/Shanghai

# 最大文件上传大小 (MB)
MAX_CONTENT_LENGTH=50

# =============================================================================
# 监控配置
# =============================================================================

# 默认检测间隔 (秒)
DEFAULT_CHECK_INTERVAL=300

# 最大并发检测数
MAX_CONCURRENT_CHECKS=50

# 请求超时时间 (秒)
REQUEST_TIMEOUT=30

# =============================================================================
# 性能配置
# =============================================================================

# 数据库连接池配置
DB_POOL_SIZE=20
DB_POOL_OVERFLOW=10
DB_POOL_RECYCLE=3600

# Redis连接池配置
REDIS_POOL_SIZE=20

# =============================================================================
# 文件存储配置
# =============================================================================

# 上传文件存储路径
UPLOAD_FOLDER=/app/backend/uploads

# 下载文件存储路径
DOWNLOAD_FOLDER=/app/backend/downloads

# 用户文件存储路径
USER_FILES_FOLDER=/app/backend/user_files

# 允许的文件扩展名
ALLOWED_EXTENSIONS=csv,txt,json,xlsx,xls

# =============================================================================
# 安全配置
# =============================================================================

# API速率限制
API_RATE_LIMIT=100/hour

# 登录失败锁定配置
LOGIN_ATTEMPTS_LIMIT=5
LOGIN_LOCKOUT_DURATION=1800

# Session配置
SESSION_TIMEOUT=3600
REMEMBER_COOKIE_DURATION=604800

# =============================================================================
# 第三方服务配置 (可选)
# =============================================================================

# 钉钉机器人Webhook
# DINGTALK_WEBHOOK=https://oapi.dingtalk.com/robot/send?access_token=your_token

# 企业微信机器人Webhook
# WECHAT_WEBHOOK=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=your_key

# Slack Webhook
# SLACK_WEBHOOK=https://hooks.slack.com/services/your/slack/webhook

# =============================================================================
# 备份配置
# =============================================================================

# 自动备份启用
AUTO_BACKUP_ENABLED=true

# 备份保留天数
BACKUP_RETENTION_DAYS=30

# 备份时间 (格式: HH:MM)
BACKUP_TIME=02:00

# 备份存储路径
BACKUP_PATH=/backups

# =============================================================================
# 监控和日志配置
# =============================================================================

# 启用性能监控
ENABLE_PERFORMANCE_MONITORING=true

# 日志轮转配置
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=10

# 错误日志邮件通知
ERROR_LOG_EMAIL_ENABLED=false
ERROR_LOG_EMAIL_RECIPIENTS=admin@example.com

# =============================================================================
# 宝塔面板特定配置
# =============================================================================

# 宝塔面板网站目录 (前端静态文件部署路径)
BAOTA_WEB_ROOT=/www/wwwroot/monitor.yourdomain.com

# 宝塔面板SSL证书路径
SSL_CERT_PATH=/www/server/panel/vhost/cert/monitor.yourdomain.com/fullchain.pem
SSL_KEY_PATH=/www/server/panel/vhost/cert/monitor.yourdomain.com/privkey.pem

# 宝塔面板Nginx配置路径
NGINX_CONF_PATH=/www/server/nginx/conf/vhost/monitor.yourdomain.com.conf

# =============================================================================
# 开发调试配置 (生产环境请设置为false)
# =============================================================================

# 调试模式 (生产环境必须为false)
DEBUG=false

# 自动重载 (生产环境必须为false)
AUTO_RELOAD=false

# SQL查询日志 (生产环境建议为false)
SQLALCHEMY_ECHO=false

# =============================================================================
# 域名和端口配置
# =============================================================================

# 域名配置
DOMAIN_NAME=monitor.yourdomain.com

# 前端URL
FRONTEND_URL=https://monitor.yourdomain.com

# 后端API URL
BACKEND_URL=https://monitor.yourdomain.com/api

# 容器端口映射
BACKEND_PORT=5000
MYSQL_PORT=3306
REDIS_PORT=6379
PHPMYADMIN_PORT=8080
REDIS_COMMANDER_PORT=8081

# =============================================================================
# 生成配置提示
# =============================================================================

# 生成安全密钥的方法:
# python3 -c "import secrets; print(secrets.token_urlsafe(32))"

# 生成强密码的方法:
# openssl rand -base64 32

# 检查邮箱SMTP设置:
# telnet smtp.qq.com 587

# =============================================================================
# 重要安全提醒
# =============================================================================

# 1. 请务必修改所有默认密码
# 2. SECRET_KEY和JWT_SECRET_KEY必须使用随机生成的强密钥
# 3. 生产环境请使用HTTPS
# 4. 定期备份数据库
# 5. 定期更新Docker镜像
# 6. 启用防火墙，只开放必要端口